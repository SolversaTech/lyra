{"version":3,"file":"js/default.js","sources":["webpack:///./src/js/transforms/manipulators/Area.js"],"sourcesContent":["import {inherits, extend}  from 'vega';\nimport Manipulators from './Manipulators';\nimport annotate from '../../util/annotate-manipulators';\nimport {coords, PADDING as PAD} from '../../ctrl/manipulators';\n\n/**\n * @classdesc Represents the AreaManipulators, a Vega data transformation operator.\n *\n * @description The AreaManipulators calculates manipulators when a Area\n * mark instance is selected.\n * @extends Manipulators\n *\n * @param {Model} graph - A Vega model.\n *\n * @constructor\n */\nexport default function AreaManipulators(params) {\n  Manipulators.call(this, [], params);\n}\n\nAreaManipulators.Definition = extend({}, Manipulators.Definition);\n\nconst prototype = inherits(AreaManipulators, Manipulators);\n\nprototype.handles = function(item) {\n  const bounds = item.mark.bounds;\n  const c = coords(bounds, 'handle');\n  return [\n    c.topLeft, c.topRight,\n    c.bottomLeft, c.bottomRight\n  ];\n};\n\nprototype.connectors = function(item) {\n  const bounds = item.mark.bounds;\n  const c = coords(bounds, 'connector');\n  return [c.midCenter];\n};\n\nprototype.channels = function(item) {\n  const b  = item.mark.bounds,\n      gb = item.mark.group.bounds,\n      path = item._svg.getAttribute('d'),\n      c = coords(b),\n      m = c.midCenter;\n\n  return []\n    // x\n    .concat([\n      {x: gb.x1, y: item.y}, {x: item.x - PAD, y: item.y}\n    ].map(annotate('x', 'span')))\n    // y\n    .concat([\n      {x: item.x, y: gb.y1}, {x: item.x, y: item.y - PAD}\n    ].map(annotate('y', 'span')))\n    .concat([\n      {x: m.x, y: m.y, path: path}\n    ].map(annotate('fill', 'border')));\n};\n\nprototype.altchannels = function(item) {\n  const b  = item.mark.bounds,\n      c = coords(b),\n      m = c.midCenter,\n      path = item.mark.items[0].pathCache;\n\n  path = path.map(function(d) {\n    return d.join(' ');\n  }).join(' ');\n\n  return [\n    {x: m.x, y: m.y, path: path}\n  ].map(annotate('stroke', 'border'));\n};\n"],"mappings":"AAAA","sourceRoot":""}